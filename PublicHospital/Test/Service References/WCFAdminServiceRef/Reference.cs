//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.WCFAdminServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFAdminServiceRef.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAdmin", ReplyAction="http://tempuri.org/IAdminService/GetAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceLayer.AdminFault), Action="http://tempuri.org/IAdminService/GetAdminAdminFaultFault", Name="AdminFault", Namespace="http://schemas.datacontract.org/2004/07/ServiceLayer")]
        ServiceLayer.Admin GetAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAdmin", ReplyAction="http://tempuri.org/IAdminService/GetAdminResponse")]
        System.Threading.Tasks.Task<ServiceLayer.Admin> GetAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertAdmin", ReplyAction="http://tempuri.org/IAdminService/InsertAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceLayer.AdminFault), Action="http://tempuri.org/IAdminService/InsertAdminAdminFaultFault", Name="AdminFault", Namespace="http://schemas.datacontract.org/2004/07/ServiceLayer")]
        Test.WCFAdminServiceRef.InsertAdminResponse InsertAdmin(Test.WCFAdminServiceRef.InsertAdminRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/InsertAdmin", ReplyAction="http://tempuri.org/IAdminService/InsertAdminResponse")]
        System.Threading.Tasks.Task<Test.WCFAdminServiceRef.InsertAdminResponse> InsertAdminAsync(Test.WCFAdminServiceRef.InsertAdminRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateAdmin", ReplyAction="http://tempuri.org/IAdminService/UpdateAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceLayer.AdminFault), Action="http://tempuri.org/IAdminService/UpdateAdminAdminFaultFault", Name="AdminFault", Namespace="http://schemas.datacontract.org/2004/07/ServiceLayer")]
        Test.WCFAdminServiceRef.UpdateAdminResponse UpdateAdmin(Test.WCFAdminServiceRef.UpdateAdminRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateAdmin", ReplyAction="http://tempuri.org/IAdminService/UpdateAdminResponse")]
        System.Threading.Tasks.Task<Test.WCFAdminServiceRef.UpdateAdminResponse> UpdateAdminAsync(Test.WCFAdminServiceRef.UpdateAdminRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAdmin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertAdminRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceLayer.Admin admin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public InsertAdminRequest() {
        }
        
        public InsertAdminRequest(ServiceLayer.Admin admin, string message) {
            this.admin = admin;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAdminResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertAdminResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool InsertAdminResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ServiceLayer.Admin admin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string message;
        
        public InsertAdminResponse() {
        }
        
        public InsertAdminResponse(bool InsertAdminResult, ServiceLayer.Admin admin, string message) {
            this.InsertAdminResult = InsertAdminResult;
            this.admin = admin;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdmin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAdminRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceLayer.Admin admin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public UpdateAdminRequest() {
        }
        
        public UpdateAdminRequest(ServiceLayer.Admin admin, string message) {
            this.admin = admin;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAdminResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateAdminResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateAdminResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ServiceLayer.Admin admin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string message;
        
        public UpdateAdminResponse() {
        }
        
        public UpdateAdminResponse(bool UpdateAdminResult, ServiceLayer.Admin admin, string message) {
            this.UpdateAdminResult = UpdateAdminResult;
            this.admin = admin;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : Test.WCFAdminServiceRef.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<Test.WCFAdminServiceRef.IAdminService>, Test.WCFAdminServiceRef.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceLayer.Admin GetAdmin(int id) {
            return base.Channel.GetAdmin(id);
        }
        
        public System.Threading.Tasks.Task<ServiceLayer.Admin> GetAdminAsync(int id) {
            return base.Channel.GetAdminAsync(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Test.WCFAdminServiceRef.InsertAdminResponse Test.WCFAdminServiceRef.IAdminService.InsertAdmin(Test.WCFAdminServiceRef.InsertAdminRequest request) {
            return base.Channel.InsertAdmin(request);
        }
        
        public bool InsertAdmin(ref ServiceLayer.Admin admin, ref string message) {
            Test.WCFAdminServiceRef.InsertAdminRequest inValue = new Test.WCFAdminServiceRef.InsertAdminRequest();
            inValue.admin = admin;
            inValue.message = message;
            Test.WCFAdminServiceRef.InsertAdminResponse retVal = ((Test.WCFAdminServiceRef.IAdminService)(this)).InsertAdmin(inValue);
            admin = retVal.admin;
            message = retVal.message;
            return retVal.InsertAdminResult;
        }
        
        public System.Threading.Tasks.Task<Test.WCFAdminServiceRef.InsertAdminResponse> InsertAdminAsync(Test.WCFAdminServiceRef.InsertAdminRequest request) {
            return base.Channel.InsertAdminAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Test.WCFAdminServiceRef.UpdateAdminResponse Test.WCFAdminServiceRef.IAdminService.UpdateAdmin(Test.WCFAdminServiceRef.UpdateAdminRequest request) {
            return base.Channel.UpdateAdmin(request);
        }
        
        public bool UpdateAdmin(ref ServiceLayer.Admin admin, ref string message) {
            Test.WCFAdminServiceRef.UpdateAdminRequest inValue = new Test.WCFAdminServiceRef.UpdateAdminRequest();
            inValue.admin = admin;
            inValue.message = message;
            Test.WCFAdminServiceRef.UpdateAdminResponse retVal = ((Test.WCFAdminServiceRef.IAdminService)(this)).UpdateAdmin(inValue);
            admin = retVal.admin;
            message = retVal.message;
            return retVal.UpdateAdminResult;
        }
        
        public System.Threading.Tasks.Task<Test.WCFAdminServiceRef.UpdateAdminResponse> UpdateAdminAsync(Test.WCFAdminServiceRef.UpdateAdminRequest request) {
            return base.Channel.UpdateAdminAsync(request);
        }
    }
}
