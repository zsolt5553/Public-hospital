<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZT+9AAAAAElFTkSuQmCC
</value>
  </data>
</root>